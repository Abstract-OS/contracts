{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "base"
      ],
      "properties": {
        "base": {
          "$ref": "#/definitions/DappExecuteMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deposit_stable"
      ],
      "properties": {
        "deposit_stable": {
          "type": "object",
          "required": [
            "deposit_amount"
          ],
          "properties": {
            "deposit_amount": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "redeem_stable"
      ],
      "properties": {
        "redeem_stable": {
          "type": "object",
          "required": [
            "withdraw_amount"
          ],
          "properties": {
            "withdraw_amount": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "DappExecuteMsg": {
      "oneOf": [
        {
          "description": "Updates the base config Sets new values for the provided options",
          "type": "object",
          "required": [
            "update_config"
          ],
          "properties": {
            "update_config": {
              "type": "object",
              "properties": {
                "proxy_address": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Adds/removes traders If a trader is both in to_add and to_remove, it will be removed.",
          "type": "object",
          "required": [
            "update_traders"
          ],
          "properties": {
            "update_traders": {
              "type": "object",
              "properties": {
                "to_add": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "to_remove": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Sets a new Admin",
          "type": "object",
          "required": [
            "set_admin"
          ],
          "properties": {
            "set_admin": {
              "type": "object",
              "required": [
                "admin"
              ],
              "properties": {
                "admin": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
