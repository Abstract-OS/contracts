{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "Execute messages",
  "oneOf": [

    {
      "description": "Sets a new Admin",
      "type": "object",
      "required": [
        "set_admin"
      ],
      "properties": {
        "set_admin": {
          "type": "object",
          "required": [
            "admin"
          ],
          "properties": {
            "admin": {
              "type": "string"
            },
            "governance_type": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Create module using module factory",
      "type": "object",
      "required": [
        "create_module"
      ],
      "properties": {
        "create_module": {
          "type": "object",
          "required": [
            "module"
          ],
          "properties": {
            "init_msg": {
              "description": "Instantiate message used to instantiate the contract.",
              "anyOf": [
                {
                  "$ref": "#/definitions/Binary"
                },
                {
                  "type": "null"
                }
              ]
            },
            "module": {
              "description": "Module information.",
              "allOf": [
                {
                  "$ref": "#/definitions/Module"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Registers a module after creation. Only callable by module factory.",
      "type": "object",
      "required": [
        "register_module"
      ],
      "properties": {
        "register_module": {
          "type": "object",
          "required": [
            "module",
            "module_addr"
          ],
          "properties": {
            "module": {
              "$ref": "#/definitions/Module"
            },
            "module_addr": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Remove a module",
      "type": "object",
      "required": [
        "remove_module"
      ],
      "properties": {
        "remove_module": {
          "type": "object",
          "required": [
            "module_name"
          ],
          "properties": {
            "module_name": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Forward execution message to module",
      "type": "object",
      "required": [
        "exec_on_module"
      ],
      "properties": {
        "exec_on_module": {
          "type": "object",
          "required": [
            "exec_msg",
            "module_name"
          ],
          "properties": {
            "exec_msg": {
              "$ref": "#/definitions/Binary"
            },
            "module_name": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Update contract configuration",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "root": {
              "type": [
                "string",
                "null"
              ]
            },
            "vc_addr": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Upgrade the module to a new version If module is `abstract::manager` then the contract will do a self-migration.",
      "type": "object",
      "required": [
        "upgrade"
      ],
      "properties": {
        "upgrade": {
          "type": "object",
          "required": [
            "module"
          ],
          "properties": {
            "migrate_msg": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Binary"
                },
                {
                  "type": "null"
                }
              ]
            },
            "module": {
              "$ref": "#/definitions/Module"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Suspend manager contract",
      "type": "object",
      "required": [
        "suspend_os"
      ],
      "properties": {
        "suspend_os": {
          "type": "object",
          "required": [
            "new_status"
          ],
          "properties": {
            "new_status": {
              "type": "boolean"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Update info",
      "type": "object",
      "required": [
        "update_info"
      ],
      "properties": {
        "update_info": {
          "type": "object",
          "properties": {
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "link": {
              "type": [
                "string",
                "null"
              ]
            },
            "os_name": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Module": {
      "type": "object",
      "required": [
        "info",
        "kind"
      ],
      "properties": {
        "info": {
          "$ref": "#/definitions/ModuleInfo"
        },
        "kind": {
          "$ref": "#/definitions/ModuleKind"
        }
      }
    },
    "ModuleInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "ModuleKind": {
      "type": "string",
      "enum": [
        "add_on",
        "a_p_i",
        "service",
        "perk"
      ]
    }
  }
}
