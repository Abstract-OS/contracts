name: Clippy & Tests
on:
  pull_request:
    branches:
      - main
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      skip_check:
        description: Skip Rust-file Changes Check
        type: boolean
        default: false
        required: false

# Cancel previous runs on the same PR.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check_changes:
    name: Check for Rust changes
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    outputs:
      rust_changes: ${{ steps.rust_changes.outputs.rust_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fix git ownership
        run: |
          git config --global --add safe.directory /__w/contracts/contracts
      - name: Check if any rust files have changed
        id: changes
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/*.rs
            Cargo.toml
            Cargo.lock
      - name: Check if any rust files have changed
        if: steps.changes.outputs.any_changed == 'true' || github.event.inputs.skip_check == 'true'
        id: rust_changes
        run: |
          echo "Rust files have changed"
          echo "rust_changes=true" >> $GITHUB_OUTPUT

  lint:
    name: Clippy Linter
    needs: check_changes
    if: ${{ needs.check_changes.outputs.rust_changes == 'true'  }}
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        id: rustup
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          components: clippy
        continue-on-error: true
      - name: Delete rustup cache
        run: rm -rf ~/.rustup
        if: ${{ steps.rustup.outcome }} != "success"
      - name: Setup Rust (again)
        if: ${{ steps.rustup.outcome }} != "success"
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          components: clippy
      - name: Build | Lint
        run: cargo clippy -- -D warnings
  # Run compile check without features
  compile:
    name: Compile
    needs: check_changes
    if: ${{ needs.check_changes.outputs.rust_changes == 'true' }}
    runs-on: ubuntu-latest
    container:
        image: rust:latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name: Dependencies | Compile
        run: cargo update
      - name: Build | Compile
        run: cargo check
  # Run tests
  test:
    name: Test
    if: ${{ needs.check_changes.outputs.rust_changes == 'true' }}
    runs-on:  ubuntu-latest
    container:
        image: rust:latest
    needs: [compile, check_changes]
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name: Unit Test | Test
        run: cargo test

  # Run with all features enabled
  features:
    name: Features
    # needs: compile
    runs-on: ubuntu-latest
    container:
        image: rust:latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Build | Compile
        run: cargo check --all-features 

