name: Clippy & Tests
on:
  pull_request:
    branches:
     - main
     - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check-changes:
    name: Check for Rust changes
    runs-on: self-hosted
    # TODO: different image?
    container:
      image: rust:latest
    outputs:
      rust-changes: ${{ steps.rust-changes.outputs.rust-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check if any rust files have changed
        id: changes
        uses: tj-actions/changed-files@v35
        with:
          files: |
            *.rs
            Cargo.toml
            Cargo.lock
      - name: Check if any rust files have changed
        if: steps.changes.outputs.any_changed == 'true'
        id: rust-changes
        run: |
          echo "Rust files have changed"
          echo "rust-changes=true" >> $GITHUB_OUTPUT

  lint:
    name: Clippy Linter
    if: ${{ needs.check-changes.outputs.rust-changes == 'true' }}
    runs-on: self-hosted
    container:
      image: rust:latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        id: rustup
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          components: clippy
        continue-on-error: true
      - name: Delete rustup cache
        run: rm -rf ~/.rustup
        if: ${{ steps.rustup.outcome }} != "success"
      - name: Setup Rust (again)
        if: ${{ steps.rustup.outcome }} != "success"
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          components: clippy
      - name: Build | Lint
        run: cargo clippy -- -D warnings
  compile:
    name: Compile
    if: ${{ needs.check-changes.outputs.rust-changes == 'true' }}
    runs-on: self-hosted
    container:
        image: rust:latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable

      - name: Dependencies | Compile
        run: cargo update
      - name: Build | Compile
        run: cargo check --features all
  test:
    name: Test
    if: ${{ needs.check-changes.outputs.rust-changes == 'true' }}
    runs-on:  self-hosted
    container:
        image: rust:latest
    needs: [compile]
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name: Unit Test | Test
        run: cargo test
